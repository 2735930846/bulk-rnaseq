####两个数据框根据交集基因来进行表格的底色修改生成新的表格####可以用来喂给GPT，GPT的食量
# 安装并加载必要的包
#install.packages("openxlsx")
#install.packages("dplyr")

library(openxlsx)
library(dplyr)

# 读取xlsx文件和c表格文件
xlsx_file <- "C:/Users/A/Desktop/DEPMAP TOTAL.xlsx"


# 读取xlsx文件中的第一个工作表
xlsx_data <- read.xlsx(xlsx_file, sheet = 1)

# 读取c表格文件
c_data <- RBR蛋白

# 获取两个表格的第一列
xlsx_first_column <- xlsx_data[, 1]
c_first_column <- c_data[, 1]

# 找到交集
common_genes <- intersect(xlsx_first_column, c_first_column)

# 创建样式
gray_style <- createStyle(fgFill = "#D3D3D3")

# 创建一个新的Workbook对象
wb <- createWorkbook()

# 将数据写入新工作簿
addWorksheet(wb, "Sheet1")
writeData(wb, "Sheet1", xlsx_data)

# 将重复项标记为灰色背景
for (i in seq_along(xlsx_first_column)) {
  if (xlsx_first_column[i] %in% common_genes) {
    addStyle(wb, "Sheet1", style = gray_style, rows = i + 1, cols = 1:ncol(xlsx_data), gridExpand = TRUE)
  }
}

# 保存新的xlsx文件
saveWorkbook(wb, "modified_xlsx_file.xlsx", overwrite = TRUE)




# 安装并加载必要的包
# install.packages("openxlsx")
# install.packages("dplyr")
# install.packages("scales")

library(openxlsx)
library(dplyr)
library(scales)

# 读取xlsx文件和c列表文件
xlsx_file <- "C:/Users/A/Desktop/DEPMAP TOTAL.xlsx"
c_file <- "C:/Users/A/Desktop/c_list.csv"
a_file <- "C:/Users/A/Desktop/a_file.csv"  # 包含交集基因及得分

# 读取xlsx文件中的第一个工作表
xlsx_data <- read.xlsx(xlsx_file, sheet = 1)

# 读取c列表文件和a文件
c_data <- read.csv(c_file, header = FALSE, stringsAsFactors = FALSE)
a_data <- read.csv(a_file, stringsAsFactors = FALSE)

# 获取c和a的第一列
c_first_column <- c_data[, 1]
a_first_column <- a_data[, 1]

# 找到交集
common_genes <- intersect(c_first_column, a_first_column)

# 创建渐变颜色函数
gradient_color <- colorRampPalette(c("white", "red"))

# 获取a文件中交集基因对应的得分，并归一化
a_common_scores <- a_data[a_data[, 1] %in% common_genes, 2]
names(a_common_scores) <- a_data[a_data[, 1] %in% common_genes, 1]
normalized_scores <- rescale(a_common_scores, to = c(0, 1))

# 生成对应的颜色
colors <- gradient_color(length(normalized_scores))
color_map <- setNames(colors[order(normalized_scores)], names(normalized_scores))

# 创建样式映射
styles <- lapply(color_map, function(color) createStyle(fgFill = color))

# 创建一个新的Workbook对象
wb <- createWorkbook()

# 将c_data写入新工作簿
addWorksheet(wb, "Sheet1")
writeData(wb, "Sheet1", c_data)

# 将重复项根据得分标记为对应颜色背景
for (i in seq_along(c_first_column)) {
  gene <- c_first_column[i]
  if (gene %in% names(styles)) {
    addStyle(wb, "Sheet1", style = styles[[gene]], rows = i + 1, cols = 1, gridExpand = TRUE)
  }
}

# 保存新的xlsx文件
saveWorkbook(wb, "C:/Users/A/Desktop/modified_c_list.xlsx", overwrite = TRUE)







