# 安装并加载必要的包
# 如果没有安装这些包，请取消注释以下安装命令
#install.packages("adabag")
library(adabag)
library(caret)
library(pROC)
library(tibble)
library(ROCit)
library(ggplot2)
library(shapviz)

# 读取并准备数据
tpms_transposed <- read.table("MachineLearning.txt", sep = "\t", row.names = 1, check.names = FALSE, stringsAsFactors = FALSE, header = TRUE)
tpms_transposed <- tpms_transposed[, c("CDKN1C", "ADRA1A", "BCL2A1", "DPP4", "CACNA1B", "TFPI", "KCNA5", "CYB5A", "Label")]

# 读取数据
my_data <- tpms_transposed

# 查看数据结构
str(my_data)

# 确保最后一列是Label
if (!("Label" %in% colnames(my_data))) {
  stop("数据框中没有 'Label' 列，请检查数据。")
}

# 标准化特征数据（去除Label列）
features <- my_data[, -ncol(my_data)]
features <- scale(features)

# 将标准化后的数据和Label列组合成新的数据框
my_data_scaled <- data.frame(features, Label = my_data$Label)

# 划分训练集和测试集
set.seed(123)
inTrain <- createDataPartition(y = my_data_scaled$Label, p = 0.6, list = FALSE)
traindata <- my_data_scaled[inTrain, ]
testdata <- my_data_scaled[-inTrain, ]

# 确保 Label 列为因子类型
traindata$Label <- as.factor(traindata$Label)
testdata$Label <- as.factor(testdata$Label)

# 使用 AdaBoost 进行分类
# 创建训练模型
model_adaboost <- boosting(Label ~ ., data = traindata, boos = TRUE, mfinal = 100)

# 生成训练集预测值
train_pred_adaboost <- predict(model_adaboost, traindata)
traindata$pred_adaboost <- train_pred_adaboost$prob[,2]

# 计算训练集AUC
ROC_train_adaboost <- round(auc(traindata$Label, traindata$pred_adaboost), 4)
print(paste("Train AUC (AdaBoost):", ROC_train_adaboost))

# 在测试集上生成预测值
test_pred_adaboost <- predict(model_adaboost, testdata)
testdata$pred_adaboost <- test_pred_adaboost$prob[,2]

# 计算测试集AUC
ROC_test_adaboost <- round(auc(testdata$Label, testdata$pred_adaboost), 4)
print(paste("Test AUC (AdaBoost):", ROC_test_adaboost))

# 创建混淆矩阵并计算性能指标
predicted_classes_adaboost <- ifelse(testdata$pred_adaboost > 0.5, 1, 0)
confusion_matrix_adaboost <- confusionMatrix(as.factor(predicted_classes_adaboost), testdata$Label)
print(confusion_matrix_adaboost)

# 提取准确率、召回率、特异性和F1分数
accuracy_adaboost <- confusion_matrix_adaboost$overall["Accuracy"]
recall_adaboost <- confusion_matrix_adaboost$byClass["Recall"]
specificity_adaboost <- confusion_matrix_adaboost$byClass["Specificity"]
f1_adaboost <- confusion_matrix_adaboost$byClass["F1"]

cat("准确率 (AdaBoost):", accuracy_adaboost, "\n")
cat("召回率 (AdaBoost):", recall_adaboost, "\n")
cat("特异性 (AdaBoost):", specificity_adaboost, "\n")
cat("F1分数 (AdaBoost):", f1_adaboost, "\n")

# 保存 AdaBoost 的预测结果和实际值到 CSV 文件
write.csv(data.frame(Label = testdata$Label, Predicted = testdata$pred_adaboost), "adaboost_predictions.csv", row.names = FALSE)

# 绘制 AdaBoost 的 ROC 曲线
roc_obj_adaboost <- roc(testdata$Label, testdata$pred_adaboost)
plot(roc_obj_adaboost, main = "ROC Curve for AdaBoost", xlab = "False Positive Rate", ylab = "True Positive Rate", col = "blue", lwd = 2)
abline(a = 0, b = 1, lty = 2, col = "gray")

# 添加 AUC 值到图中
auc_value_adaboost <- auc(roc_obj_adaboost)
legend("bottomright", legend = paste("AUC =", round(auc_value_adaboost, 4)), col = "blue", lwd = 2)
